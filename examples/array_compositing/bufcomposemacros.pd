#N canvas 73 23 917 773 12;
#X obj 25 70 loadbang;
#X obj 25 140 soundfiler;
#N canvas 1184 109 450 670 generate_basic_waveforms 0;
#X obj 57 220 until;
#X msg 125 241 -1;
#X msg 57 241 1;
#X obj 57 262 +;
#X obj 40 66 loadbang;
#X obj 57 283 t f f f, f 40;
#X msg 40 85 100;
#X obj 72 319 expr sin($f1 / 5 * 3);
#X obj 58 371 expr sin($f1 * 3);
#X obj 42 422 expr sin($f1 / 0.2 * 3);
#X obj 40 106 t f b b;
#X msg 122 111 \; bufmacro_low-0 resize 100 \, const \; bufmacro_low-1 resize 100 \, const \; bufmacro_mid-0 resize 100 \, const \; bufmacro_mid-1 resize 100 \, const \; bufmacro_high-0 resize 100 \, const \; bufmacro_high-1 resize 100 \, const;
#X obj 122 63 inlet;
#X obj 72 340 tabwrite bufmacro_low-0;
#X obj 58 392 tabwrite bufmacro_mid-0;
#X obj 42 443 tabwrite bufmacro_high-0;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 7 0;
#X connect 5 0 8 0;
#X connect 5 0 9 0;
#X connect 5 1 13 1;
#X connect 5 1 14 1;
#X connect 5 1 15 1;
#X connect 5 2 3 1;
#X connect 6 0 10 0;
#X connect 7 0 13 0;
#X connect 8 0 14 0;
#X connect 9 0 15 0;
#X connect 10 0 0 0;
#X connect 10 1 1 0;
#X connect 10 2 11 0;
#X connect 12 0 6 0;
#X restore 26 217 pd generate_basic_waveforms;
#X obj 26 195 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 56 194 1) click here to reset to the basic shapes;
#X text 34 303 2) try the new macros! They all take a list of (fluid.multi)arrays as arguments \, and will update the first item., f 112;
#X text 562 61 3) view the arrays to monitor the results;
#X text 37 361 Concat juxtaposes the whole list in time;
#X text 444 362 Merge mixes them at unity gain;
#X obj 563 125 array define bufmacro_low-0;
#X obj 563 146 array define bufmacro_low-1;
#X obj 563 168 array define bufmacro_mid-0;
#X obj 563 189 array define bufmacro_mid-1;
#X obj 563 210 array define bufmacro_high-0;
#X obj 563 231 array define bufmacro_high-1;
#X msg 40 383 concat bufmacro_low bufmacro_mid;
#X msg 46 405 concat bufmacro_mid bufmacro_low bufmacro_high;
#X msg 58 429 concat bufmacro_mid bufmacro_piano bufmacro_low;
#X msg 72 451 concat bufmacro_piano bufmacro_low;
#X obj 563 83 array define bufmacro_piano-0 4410;
#X obj 563 104 array define bufmacro_piano-1 4410;
#X msg 25 90 read ../../help/media/Tremblay-SA-UprightPianoPedalWide.wav bufmacro_piano-0 bufmacro_piano-1;
#X obj 41 497 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#N canvas 290 104 780 584 concat 0;
#X obj 365 336 outlet;
#X obj 36 111 list split 1;
#X obj 36 151 t b s;
#X obj 229 374 list store;
#X obj 316 142 list length;
#X obj 36 84 t a b, f 45;
#X obj 301 241 +;
#X obj 301 265 t f f;
#X obj 319 291 moses;
#X msg 260 214 1;
#X msg 292 337 get \$1 1;
#X msg 404 144 -1;
#X obj 199 486 array size;
#X msg 126 285 symbol \$1-0;
#X obj 365 315 t b;
#X msg 17 285 destination \$1;
#X obj 16 541 fluid.bufcompose;
#X msg 199 510 deststartframe \$1;
#X msg 124 486 source \$1;
#X obj 229 398 t b s b;
#X text 136 110 splits the destination;
#X text 394 313 iterates through the rest of arrays \, bangs when done;
#X obj 36 33 inlet;
#X obj 36 58 route concat;
#X connect 1 0 2 0;
#X connect 1 1 3 1;
#X connect 1 1 4 0;
#X connect 2 0 9 0;
#X connect 2 1 15 0;
#X connect 2 1 13 0;
#X connect 3 0 19 0;
#X connect 4 0 8 1;
#X connect 5 0 1 0;
#X connect 5 1 11 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 6 1;
#X connect 8 0 10 0;
#X connect 8 1 14 0;
#X connect 9 0 6 0;
#X connect 10 0 3 0;
#X connect 11 0 6 1;
#X connect 12 0 17 0;
#X connect 13 0 12 1;
#X connect 14 0 0 0;
#X connect 15 0 16 0;
#X connect 16 0 9 0;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 16 0;
#X connect 19 1 18 0;
#X connect 19 2 12 0;
#X connect 22 0 23 0;
#X connect 23 0 5 0;
#X restore 41 475 pd concat;
#X obj 446 500 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#N canvas 290 104 780 584 merge 0;
#X obj 365 336 outlet;
#X obj 36 111 list split 1;
#X obj 36 151 t b s;
#X obj 229 374 list store;
#X obj 316 142 list length;
#X obj 36 84 t a b, f 45;
#X obj 301 241 +;
#X obj 301 265 t f f;
#X obj 319 291 moses;
#X msg 260 214 1;
#X msg 292 337 get \$1 1;
#X msg 404 144 -1;
#X msg 126 285 symbol \$1-0;
#X obj 365 315 t b;
#X msg 17 285 destination \$1;
#X msg 124 486 source \$1;
#X text 136 110 splits the destination;
#X text 394 313 iterates through the rest of arrays \, bangs when done;
#X obj 36 33 inlet;
#X obj 36 58 route merge;
#X obj 229 398 t b s;
#X obj 16 541 fluid.bufcompose -destgain 1;
#X connect 1 0 2 0;
#X connect 1 1 3 1;
#X connect 1 1 4 0;
#X connect 2 0 9 0;
#X connect 2 1 14 0;
#X connect 2 1 12 0;
#X connect 3 0 20 0;
#X connect 4 0 8 1;
#X connect 5 0 1 0;
#X connect 5 1 11 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 6 1;
#X connect 8 0 10 0;
#X connect 8 1 13 0;
#X connect 9 0 6 0;
#X connect 10 0 3 0;
#X connect 11 0 6 1;
#X connect 13 0 0 0;
#X connect 14 0 21 0;
#X connect 15 0 21 0;
#X connect 18 0 19 0;
#X connect 19 0 5 0;
#X connect 20 0 21 0;
#X connect 20 1 15 0;
#X connect 21 0 9 0;
#X restore 446 478 pd merge;
#X msg 477 454 merge bufmacro_piano bufmacro_low;
#X msg 463 432 merge bufmacro_mid bufmacro_piano bufmacro_low;
#X msg 451 408 merge bufmacro_mid bufmacro_low bufmacro_high;
#X msg 445 386 merge bufmacro_low bufmacro_mid;
#X text 247 602 Stack would piles them up in as many channels as it would need \, but there is no programatic ways to augment the number of 'channels' of a fluid.multiarray... one would need to create a dynamic output using the automatic_multiarray. See this helpfile to understand their use:;
#X obj 519 665 fluid.bufinfo;
#X connect 0 0 21 0;
#X connect 3 0 2 0;
#X connect 15 0 23 0;
#X connect 16 0 23 0;
#X connect 17 0 23 0;
#X connect 18 0 23 0;
#X connect 21 0 1 0;
#X connect 23 0 22 0;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X connect 27 0 25 0;
#X connect 28 0 25 0;
#X connect 29 0 25 0;
